##################################################################################################
#
# CMake script for finding snappy.
#
# Cache variables (not intended to be used in CMakeLists.txt files)
#
# - snappy_INCLUDE_DIR: Absolute path to package headers.
# - snappy_LIBRARY: Absolute path to library.
#
#
# Output variables:
#
# - snappy_FOUND: Boolean that indicates if the package was found
# - snappy_INCLUDE_DIRS: Paths to the necessary header files
# - snappy_LIBRARIES: Package libraries
#
# Example usage:
#
#  find_package(snappy)
#  if(NOT snappy_FOUND)
#    # Error handling
#  endif()
#  ...
#  include_directories(${snappy_INCLUDE_DIRS} ...)
#  ...
#  target_link_libraries(my_target ${snappy_LIBRARIES})
#
##################################################################################################

find_package(snappy CONFIG QUIET)

if (NOT snappy_FOUND)

    # Search path for nonstandard package locations
    if(SNAPPY_ROOT_DIR)
        set(SNAPPY_INCLUDE_PATH PATHS "${SNAPPY_ROOT_DIR}/include" NO_DEFAULT_PATH)
        set(SNAPPY_LIBRARY_PATH PATHS "${SNAPPY_ROOT_DIR}/lib"     NO_DEFAULT_PATH)
    else()
        set(SNAPPY_INCLUDE_PATH "")
        set(SNAPPY_LIBRARY_PATH "")
    endif()

    # Find headers and libraries
    find_path(snappy_INCLUDE_DIR NAMES snappy.h ${SNAPPY_ROOT_DIR}/include/)
    find_library(snappy_LIBRARY  NAMES snappy ${SNAPPY_ROOT_DIR}/lib)

    mark_as_advanced(snappy_INCLUDE_DIR snappy_LIBRARY)

    # Output variables generation
    include(FindPackageHandleStandardArgs)
    find_package_handle_standard_args(snappy DEFAULT_MSG snappy_LIBRARY snappy_INCLUDE_DIR)

    set(snappy_FOUND ${SNAPPY_FOUND}) # Enforce case-correctness: Set appropriately cased variable...
    unset(SNAPPY_FOUND) # ...and unset uppercase variable generated by find_package_handle_standard_args

    if(snappy_FOUND)
        set(snappy_INCLUDE_DIR ${snappy_INCLUDE_DIR})
        set(snappy_LIBRARY ${snappy_LIBRARY})

        if(NOT TARGET snappy::snappy)
            add_library(snappy::snappy UNKNOWN IMPORTED)
            set_property(TARGET snappy::snappy PROPERTY IMPORTED_LOCATION ${snappy_LIBRARY})
            set_property(TARGET snappy::snappy PROPERTY INTERFACE_INCLUDE_DIRECTORIES ${snappy_INCLUDE_DIR})
        endif()
        list(APPEND snappy_TARGETS snappy::snappy)
    elseif(snappy_FIND_REQUIRED)
        message(FATAL_ERROR "Unable to find snappy")
    endif()

else()
    message(STATUS "Found snappy from installed package in ${snappy_DIR}")
    list(APPEND snappy_TARGETS snappy::snappy)
endif()
